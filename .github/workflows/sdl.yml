name: OpenVINO tokenizers sdl tests
on:
  workflow_dispatch:
  pull_request:
  push:
    branches:
      - master
      - 'releases/**'

permissions:
  actions: read
  contents: read
  security-events: write

concurrency:
  # github.ref is not unique in post-commit
  group: ${{ github.event_name == 'push' && github.run_id || github.ref }}-linux-sdl
  cancel-in-progress: true

env:
  PYTHON_VERSION: '3.11'

jobs:
  sdl_tests:
    name: bandit_tests
    timeout-minutes: 5
    defaults:
      run:
        shell: bash
    runs-on: ubuntu-latest

    steps:
      - name: Clone Openvino tokenizers sources and tests
        uses: actions/checkout@v4

      - name: Setup Python ${{ env.PYTHON_VERSION }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}
          cache: 'pip'

      - name: Install Python tests dependencies
        run: |
          python3 -m pip install bandit

      - name: Tokenizers Bandit tests
        run: |
          bandit -c pyproject.toml -r python

  trivy_scan:
    name: tryvi_tests
    runs-on: ubuntu-latest

    steps:
      - name: Clone Openvino tokenizers sources
        uses: actions/checkout@v4

      - name: Run Trivy vulnerability scanner in fs mode
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: 'fs'
          scan-ref: '.'

  checkmarx_scan:
    name: checkmarx_tests
    runs-on: ubuntu-latest

    steps:
      - name: Clone Openvino tokenizers sources
        uses: actions/checkout@v4

      - name: Checkmarx AST CLI Action
        uses: checkmarx/ast-github-action@main
        with:
          base_uri: https://ast.checkmarx.net/
          cx_tenant: your_tenant
          cx_client_id: ${{ secrets.CX_CLIENT_ID }}
          cx_client_secret: ${{ secrets.CX_CLIENT_SECRET }}